var FormEditable = function() {

	var log = function(settings, response) {
		var s = [], str;
		s.push(settings.type.toUpperCase() + ' url = "' + settings.url + '"');
		for ( var a in settings.data) {
			if (settings.data[a] && typeof settings.data[a] === 'object') {
				str = [];
				for ( var j in settings.data[a]) {
					str.push(j + ': "' + settings.data[a][j] + '"');
				}
				str = '{ ' + str.join(', ') + ' }';
			} else {
				str = '"' + settings.data[a] + '"';
			}
			s.push(a + ' = ' + str);
		}
		s.push('RESPONSE: status = ' + response.status);

		if (response.responseText) {
			if ($.isArray(response.responseText)) {
				s.push('[');
				$.each(response.responseText, function(i, v) {
					s.push('{value: ' + v.value + ', text: "' + v.text + '"}');
				});
				s.push(']');
			} else {
				s.push($.trim(response.responseText));
			}
		}
		s.push('--------------------------------------\n');
		$('#console').val(s.join('\n') + $('#console').val());
	}

	/*
	 * var initAjaxMock = function () { //ajax mocks
	 * 
	 * $.post({ url: '/post', response: function (settings) { log(settings,
	 * this); } });
	 * 
	 * $.post({ url: '/error', status: 400, statusText: 'Bad Request', response:
	 * function (settings) { this.responseText = 'Please input correct value';
	 * log(settings, this); } });
	 * 
	 * $.post({ url: '/status', status: 500, response: function (settings) {
	 * this.responseText = 'Internal Server Error'; log(settings, this); } });
	 * 
	 * $.post({ url: '/groups', response: function (settings) {
	 * this.responseText = [{ value: 0, text: 'Guest' }, { value: 1, text:
	 * 'Service' }, { value: 2, text: 'Customer' }, { value: 3, text: 'Operator' }, {
	 * value: 4, text: 'Support' }, { value: 5, text: 'Admin' } ]; log(settings,
	 * this); } });
	 *  }
	 */

	var initEditables = function() {

		// set editable mode based on URL parameter
		if (App.getURLParameter('mode') == 'inline') {
			$.fn.editable.defaults.mode = 'inline';
			$('#inline').attr("checked", true);
			jQuery.uniform.update('#inline');
		} else {
			$('#inline').attr("checked", false);
			jQuery.uniform.update('#inline');
		}

		// global settings
		$.fn.editable.defaults.inputclass = 'm-wrap';
		$.fn.editable.defaults.url = '/project/ajax_update';
		$.fn.editableform.buttons = '<button type="submit" class="btn blue editable-submit"><i class="icon-ok"></i></button>';
		$.fn.editableform.buttons += '<button type="button" class="btn editable-cancel"><i class="icon-remove"></i></button>';

		$('#name').editable({
			validate : function(value) {
				if ($.trim(value) == '')
					return 'This field is required';
			}
		});

		$('#description').editable({
			showbuttons : (App.isRTL() ? 'left' : 'right')
		});

		$('#description').click(function(e) {
			e.stopPropagation();
			e.preventDefault();
			$('#description').editable('toggle');
		});

		$('#start').editable({
			rtl : App.isRTL()
		});

		/*
		 * $('#start').editable({ format: 'yyyy-mm-dd hh:ii', viewformat:
		 * 'yyyy-mm-dd hh:ii', validate: function (v) { if (v && v.getDate() ==
		 * 10) return 'Day cant be 10!'; }, datetimepicker: { rtl : App.isRTL(),
		 * todayBtn: 'linked', weekStart: 1 } });
		 */

		$('#sex').editable({
			prepend : "not selected",
			inputclass : 'm-wrap',
			source : [ {
				value : 1,
				text : 'Male'
			}, {
				value : 2,
				text : 'Female'
			} ],
			display : function(value, sourceData) {
				var colors = {
					"" : "gray",
					1 : "green",
					2 : "blue"
				}, elem = $.grep(sourceData, function(o) {
					return o.value == value;
				});

				if (elem.length) {
					$(this).text(elem[0].text).css("color", colors[value]);
				} else {
					$(this).empty();
				}
			}
		});

		$('#status').editable();

		$('#group').editable({
			showbuttons : false
		});

		$('#dob').editable({
			inputclass : 'm-wrap',
		});

		$('#event').editable({
			placement : (App.isRTL() ? 'left' : 'right'),
			combodate : {
				firstItem : 'name'
			}
		});

		$('#comments').editable({
			showbuttons : 'bottom'
		});

		$('#state').editable(
				{
					source : [ "Alabama", "Alaska", "Arizona", "Arkansas",
							"California", "Colorado", "Connecticut",
							"Delaware", "Florida", "Georgia", "Hawaii",
							"Idaho", "Illinois", "Indiana", "Iowa", "Kansas",
							"Kentucky", "Louisiana", "Maine", "Maryland",
							"Massachusetts", "Michigan", "Minnesota",
							"Mississippi", "Missouri", "Montana", "Nebraska",
							"Nevada", "New Hampshire", "New Jersey",
							"New Mexico", "New York", "North Dakota",
							"North Carolina", "Ohio", "Oklahoma", "Oregon",
							"Pennsylvania", "Rhode Island", "South Carolina",
							"South Dakota", "Tennessee", "Texas", "Utah",
							"Vermont", "Virginia", "Washington",
							"West Virginia", "Wisconsin", "Wyoming" ]
				});

		$('#fruits').editable({
			pk : 1,
			limit : 3,
			source : [ {
				value : 1,
				text : 'banana'
			}, {
				value : 2,
				text : 'peach'
			}, {
				value : 3,
				text : 'apple'
			}, {
				value : 4,
				text : 'watermelon'
			}, {
				value : 5,
				text : 'orange'
			} ]
		});

		$('#fruits').on('shown', function(e, reason) {
			App.initUniform();
		});

		$('#tags').editable({
			inputclass : 'input-large m-wrap',
			select2 : {
				tags : [ 'html', 'javascript', 'css', 'ajax' ],
				tokenSeparators : [ ",", " " ]
			}
		});

		var clientlist = [];
		$.each({
			"BD" : "Bangladesh",
			"BE" : "Belgium",

		}, function(k, v) {
			clientlist.push({
				id : k,
				text : v
			});
		});

		$('#clientid').editable({
			inputclass : 'input-large',
			source : clientlist
		});

		/*
		 * $('#ac').on('change', function(evt, params) { setTimeout(function () {
		 * $('#pickedstaff').append($('#ac').val()); $('#ac').val(''); }, 500);
		 * 
		 * });
		 */

		$('#address').editable(
				{
					url : '/post',
					value : {
						city : "San Francisco",
						street : "Valencia",
						building : "#24"
					},
					validate : function(value) {
						if (value.city == '')
							return 'city is required!';
					},
					display : function(value) {
						if (!value) {
							$(this).empty();
							return;
						}
						var html = '<b>' + $('<div>').text(value.city).html()
								+ '</b>, '
								+ $('<div>').text(value.street).html()
								+ ' st., bld. '
								+ $('<div>').text(value.building).html();
						$(this).html(html);
					}
				});
	}

	return {
		// main function to initiate the module
		init : function() {

			// inii ajax simulation
			// initAjaxMock();

			// init editable elements
			initEditables();

			// init editable toggler
			$('#enable').click(function() {
				$('#user .editable').editable('toggleDisabled');
			});

			// init
			$('#inline').on('change', function(e) {
				if ($(this).is(':checked')) {
					window.location.href = 'form_editable.html?mode=inline';
				} else {
					window.location.href = 'form_editable.html';
				}
			});

			// handle editable elements on hidden event fired
			$('#user .editable').on('hidden', function(e, reason) {
				if (reason === 'save' || reason === 'nochange') {
					var $next = $(this).closest('tr').next().find('.editable');
					if ($('#autoopen').is(':checked')) {
						setTimeout(function() {
							$next.editable('show');
						}, 300);
					} else {
						$next.focus();
					}
				}
			});

		}

	};

}();

var MilestoneEditable = function() {

	var log = function(settings, response) {
		var s = [], str;
		s.push(settings.type.toUpperCase() + ' url = "' + settings.url + '"');
		for ( var a in settings.data) {
			if (settings.data[a] && typeof settings.data[a] === 'object') {
				str = [];
				for ( var j in settings.data[a]) {
					str.push(j + ': "' + settings.data[a][j] + '"');
				}
				str = '{ ' + str.join(', ') + ' }';
			} else {
				str = '"' + settings.data[a] + '"';
			}
			s.push(a + ' = ' + str);
		}
		s.push('RESPONSE: status = ' + response.status);

		if (response.responseText) {
			if ($.isArray(response.responseText)) {
				s.push('[');
				$.each(response.responseText, function(i, v) {
					s.push('{value: ' + v.value + ', text: "' + v.text + '"}');
				});
				s.push(']');
			} else {
				s.push($.trim(response.responseText));
			}
		}
		s.push('--------------------------------------\n');
		$('#console').val(s.join('\n') + $('#console').val());
	}

	var initEditables = function() {

		// set editable mode based on URL parameter
		if (App.getURLParameter('mode') == 'inline') {
			$.fn.editable.defaults.mode = 'inline';
			$('#inline').attr("checked", true);
			jQuery.uniform.update('#inline');
		} else {
			$('#inline').attr("checked", false);
			jQuery.uniform.update('#inline');
		}

		// global settings
		$.fn.editable.defaults.inputclass = 'm-wrap';
		$.fn.editable.defaults.url = '/project/ajax_milestoneupdate';
		$.fn.editableform.buttons = '<button type="submit" class="btn blue editable-submit"><i class="icon-ok"></i></button>';
		$.fn.editableform.buttons += '<button type="button" class="btn editable-cancel"><i class="icon-remove"></i></button>';

		$('#ms_name').editable({
			validate : function(value) {
				if ($.trim(value) == '')
					return 'This field is required';
			}
		});

		$('#ms_description').editable({
			showbuttons : (App.isRTL() ? 'left' : 'right')
		});
		$('#ms_description').click(function(e) {
			e.stopPropagation();
			e.preventDefault();
			$('#ms_description').editable('toggle');
		});

		
		$('#ms_start').editable({
			rtl : App.isRTL()
		});
		
		$('#ms_end').editable({
			rtl : App.isRTL()
		});

		/*
		 * $('#ac').on('change', function(evt, params) { setTimeout(function () {
		 * $('#pickedstaff').append($('#ac').val()); $('#ac').val(''); }, 500);
		 * 
		 * });
		 */

		$('#address').editable(
				{
					url : '/post',
					value : {
						city : "San Francisco",
						street : "Valencia",
						building : "#24"
					},
					validate : function(value) {
						if (value.city == '')
							return 'city is required!';
					},
					display : function(value) {
						if (!value) {
							$(this).empty();
							return;
						}
						var html = '<b>' + $('<div>').text(value.city).html()
								+ '</b>, '
								+ $('<div>').text(value.street).html()
								+ ' st., bld. '
								+ $('<div>').text(value.building).html();
						$(this).html(html);
					}
				});
	}

	return {
		// main function to initiate the module
		init : function() {
			// init editable elements
			initEditables();
		}

	};

}();

function initPickStaff() {
	$('#staffs').on(
			'change',
			function(evt, params) {
				setTimeout(function() {
					$('#pickedstaff').append(
							$('#staffs_chzn').find('.chzn-single').find('span')
									.html());
					$('#staffs_chzn').find('.chzn-single').find('span')
							.html('');
				}, 500);

			});
}

google.load("visualization", "1");

var urlData = "/project/ajax_rjson";

var initialized = false;
var query;
var vis;

// Set callback to run when API is loaded
google.setOnLoadCallback(initialize);

function initialize() {
	initialized = true;
}

function loadMSChart(url) {
	if (!initialized) {
		alert("One moment please... still busy loading Google Visualization API");
		return;
	}

	if (url == undefined) {
		dataSourceUrl = document.getElementById("dataSourceUrl").value
	} else {
		dataSourceUrl = url;
	}

	// if the entered url is a google spreadsheet url, replace the part
	// "/ccc?" with "/tq?" in order to retrieve a neat data query result
	if (dataSourceUrl.indexOf("/ccc?")) {
		dataSourceUrl.replace("/ccc?", "/tq?");
	}

	var handleQueryResponse = function(response) {
		if (response.isError()) {
			alert('Error in query: ' + response.getMessage() + ', '
					+ response.getDetailedMessage());
			return;
		}

		// retrieve the data from the query response
		var data = response.getDataTable();

		// specify options
		var options = {
			width : "100%",
			height : "200px",
			start : new Date(2010, 7, 17),
			end : new Date(2010, 8, 2),
			style : "box",
			zoomable : false
		};

		// Instantiate our timeline object.
		vis = new links.Timeline(document.getElementById('mytimeline'), options);

		var changed = function() {
			var sel = vis.getSelection();
			console.log(sel);
			if (sel.length) {
				if (sel[0].row != undefined) {
					var row = sel[0].row;
					console.log(timeline.getItem(row));

				}
			}
		};

		google.visualization.events.addListener(vis, 'changed', changed);
		google.visualization.events.addListener(vis, 'select', onselect);

		// Draw our timeline with the created data and options
		vis.draw(data);
	}

	query && query.abort();
	query = new google.visualization.Query(dataSourceUrl);
	query.send(handleQueryResponse);
}

setTimeout(function() {
	loadMSChart(urlData);
}, 2000);

function onselect() {
	var sel = vis.getSelection();
	console.log(sel);

	if (sel.length) {
		if (sel[0].row != undefined) {
			var row = sel[0].row;
			console.log(vis.getItem(row));
			var ms = vis.getItem(row)
			// alert("event " + row + " selected");
			focusMilestone(ms);
		}
	}
}

function focusDisucssReply(id){
	
	$.post("/project/ajax_discussreply", {
		prjid : 1
	}, function(data) {
		$("#discussion").hide();
		$("#discussion").html(data).fadeIn();
		initDiscussReply();
		//$('#discussreply_scroller').slimScroll({
			//scrollTo: $('#discuss_scroller').parent().height(),
			//allowPageScroll:true
			//start:$('.discuss_last'),
        //});
		/*$('#discuss_scroller').animate({
			scrollTop: $("#discuss_scroller").parent().offset().top
	    }, 1000);*/

	});
}
function focusDisucss(id){
//	$('#discussreply_scroller').slimScroll({
//        destroy: true
//    });
	$.post("/project/ajax_discuss", {
		prjid : 1
	}, function(data) {
		$("#discussion").hide();
		$("#discussion").html(data).fadeIn();
		initDiscuss();
		//App.init();
		//$('#discuss_scroller').slimScroll({
			//scrollTo: $('#discuss_scroller').parent().height(),
			//allowPageScroll:true
			//start:'bottom',
        //});
				
		/*$('#discuss_scroller').animate({
	        scrollTop: $("#discuss_scroller").parent().offset().top
	    }, 1000);*/
		
	});
}
function focusMilestone(ms) {
	$.post("/project/ajax_milestone", {
		name : ms.content,
		start : ms.start,
		prjid : 1
	}, function(data) {
		$("#milestone_detail").hide();
		$("#milestone_detail").html(data).fadeIn();
		//App.init();
		//initPickStaff();
		initTask();
		MilestoneEditable.init();
	});
}
function focusStaff(id) {
	// var img = $('#staffimg_'+id).attr('src');
	// $('#focusstaff').html('<img src="'+img+'"/>');

	$.post("/project/ajax_staff", function(data) {
		$("#staff_detail").html(data);

	});

}

/*
 * var UISliders = function () {
 * 
 * return { //main function to initiate the module initSliders: function () { //
 * basic $(".slider-basic").slider(); // basic sliders
 *  // snap inc $("#slider-snap-inc").slider({ value: 100, min: 0, max: 1000,
 * step: 100, slide: function (event, ui) {
 * $("#slider-snap-inc-amount").text("$" + ui.value); } });
 * 
 * $("#slider-snap-inc-amount").text("$" +
 * $("#slider-snap-inc").slider("value"));
 *  // range slider $("#slider-range").slider({ range: true, min: 0, max: 500,
 * values: [75, 300], slide: function (event, ui) {
 * $("#slider-range-amount").text("$" + ui.values[0] + " - $" + ui.values[1]); }
 * });
 * 
 * $("#slider-range-amount").text("$" + $("#slider-range").slider("values", 0) + " - $" +
 * $("#slider-range").slider("values", 1));
 * 
 * //range max
 * 
 * $("#slider-range-max").slider({ range: "max", min: 1, max: 10, value: 2,
 * slide: function (event, ui) { $("#slider-range-max-amount").text(ui.value); }
 * });
 * 
 * $("#slider-range-max-amount").text($("#slider-range-max").slider("value"));
 *  // range min $("#slider-range-min").slider({ range: "min", value: 37, min:
 * 1, max: 700, slide: function (event, ui) {
 * $("#slider-range-min-amount").text("$" + ui.value); } });
 * 
 * $("#slider-range-min-amount").text("$" +
 * $("#slider-range-min").slider("value"));
 *  // // setup graphic EQ $("#slider-eq > span").each(function () { // read
 * initial values from markup and remove that var value =
 * parseInt($(this).text(), 10); $(this).empty().slider({ value: value, range:
 * "min", animate: true, orientation: "vertical" }); });
 *  // vertical slider $("#slider-vertical").slider({ orientation: "vertical",
 * range: "min", min: 0, max: 100, value: 60, slide: function (event, ui) {
 * $("#slider-vertical-amount").text(ui.value); } });
 * $("#slider-vertical-amount").text($("#slider-vertical").slider("value"));
 *  // vertical range sliders $("#slider-range-vertical").slider({ orientation:
 * "vertical", range: true, values: [17, 67], slide: function (event, ui) {
 * $("#slider-range-vertical-amount").text("$" + ui.values[0] + " - $" +
 * ui.values[1]); } });
 * 
 * $("#slider-range-vertical-amount").text("$" +
 * $("#slider-range-vertical").slider("values", 0) + " - $" +
 * $("#slider-range-vertical").slider("values", 1));
 *  },
 * 
 * initKnowElements: function () { //knob does not support ie8 so skip it if
 * (!jQuery().knob || App.isIE8()) { return; }
 * 
 * $(".knob").knob({ 'dynamicDraw': true, 'thickness': 0.2,
 * 'tickColorizeValues': true, 'skin': 'tron' });
 * 
 * if ($(".knobify").size() > 0) { $(".knobify").knob({ readOnly: true, skin:
 * "tron", 'width': 100, 'height': 100, 'dynamicDraw': true, 'thickness': 0.2,
 * 'tickColorizeValues': true, 'skin': 'tron', draw: function () { // "tron"
 * case if (this.$.data('skin') == 'tron') {
 * 
 * var a = this.angle(this.cv) // Angle , sa = this.startAngle // Previous start
 * angle , sat = this.startAngle // Start angle , ea // Previous end angle , eat =
 * sat + a // End angle , r = 1;
 * 
 * this.g.lineWidth = this.lineWidth;
 * 
 * this.o.cursor && (sat = eat - 0.3) && (eat = eat + 0.3);
 * 
 * if (this.o.displayPrevious) { ea = this.startAngle + this.angle(this.v);
 * this.o.cursor && (sa = ea - 0.3) && (ea = ea + 0.3); this.g.beginPath();
 * this.g.strokeStyle = this.pColor; this.g.arc(this.xy, this.xy, this.radius -
 * this.lineWidth, sa, ea, false); this.g.stroke(); }
 * 
 * this.g.beginPath(); this.g.strokeStyle = r ? this.o.fgColor : this.fgColor;
 * this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sat, eat, false);
 * this.g.stroke();
 * 
 * this.g.lineWidth = 2; this.g.beginPath(); this.g.strokeStyle =
 * this.o.fgColor; this.g.arc(this.xy, this.xy, this.radius - this.lineWidth + 1 +
 * this.lineWidth * 2 / 3, 0, 2 * Math.PI, false); this.g.stroke();
 * 
 * return false;
 *  } } }); } }
 *  };
 * 
 * }();
 * 
 * $(".staffworkhr").slider({ value: 100, min: 0, max: 1000, step: 100, slide:
 * function (event, ui) { $("#staffworkhr_amount").text(ui.value+"%");
 *  } });
 */

function initDiscuss(){
	Discuss.initDiscussWidget();
}
function initDiscussReply(){
	Discuss.initDiscussReplyWidget();
}


var Discuss = function() {
	return {
		// main function to initiate the module
		initDiscussWidget : function() {
			
			$('#discuss_scroller').slimScroll({
				start:'bottom',
            });
			App.init();
		},
		initDiscussReplyWidget : function() {
			$('#discussreply_scroller').slimScroll({
				start:'bottom',
            });
			App.init();
		}

	};

}();

function initTask() {
	Tasks.initTaskWidget();
}

var Tasks = function() {
	return {
		// main function to initiate the module
		initTaskWidget : function() {
			$('input.liChild').change(function() {
				if ($(this).is(':checked')) {
					$(this).parents('li').addClass("task-done");
				} else {
					$(this).parents('li').removeClass("task-done");
				}
			});
			$('.scroller').slimScroll({
                
            });
			
			App.init();
		}

	};

}();

jQuery(document).ready(function() {
	FormEditable.init();
	focusDisucss(1);
	initTask();
});
